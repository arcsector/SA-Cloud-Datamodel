############################
###         AWS          ###
############################

[aws:cloudtrail]
EVAL-action = case(eventName=="ConsoleLogin", lower('responseElements.ConsoleLogin'), eventName=="TerminateInstances", "terminate", eventName=="RunInstances", "run", eventName=="StopInstances", "stop", eventName=="StartInstances", "start", eventName="GetObject", "get", eventName="PutObject", "put", eventName="CreateBucket", "create", eventName="CreateImage", "create")
EVAL-status = if(eventName="RunInstances", 'responseElements.instancesSet.items{}.instanceState.name', 'responseElements.instancesSet.items{}.currentState.name')
EVAL-account = if('userIdentity.type'="AWSAccount" OR 'userIdentity.type'="AWSService", recipientAccountId, 'userIdentity.accountId')
EVAL-acl_entity = coalesce('requestParameters.AccessControlPolicy.AccessControlList.Grant{}.Grantee.DisplayName','requestParameters.AccessControlPolicy.AccessControlList.Grant{}.Grantee.URI')
EVAL-dest = coalesce('responseElements.instancesSet.items{}.instanceId', 'responseElements.imageId')
EVAL-image_id = coalesce('requestParameters.instancesSet.items{}.imageId','responseElements.imageId')
EVAL-role = coalesce('requestParameters.roleArn', ' userIdentity.sessionContext.sessionIssuer.arn')
EVAL-src_user = coalesce('userIdentity.arn', 'userIdentity.accountId')


FIELDALIAS-event-name = eventName AS event_name
FIELDALIAS-useragent = userAgent AS http_user_agent
FIELDALIAS-aws-account-id = aws_account_id AS account
FIELDALIAS-aws-src-for-cloud-dm = src AS src_ip
FIELDALIAS-vendor-product-for-cloud-dm = eventSource AS vendor_product
FIELDALIAS-instance-type-for-cloud-dm = requestParameters.instanceType AS instance_type
FIELDALIAS-eventSource-for-aws-cloudtrail =  responseElements.instancesSet.items{}.instanceId AS instance_id
FIELDALIAS-bucket-name-for-cloud-dm = requestParameters.bucketName AS bucket_name
FIELDALIAS-object-path-for-cloud-dm = requestParameters.key AS object_path
FIELDALIAS-acl-permission-for-cloud-dm = requestParameters.AccessControlPolicy.AccessControlList.Grant{}.Permission AS acl_permission
FIELDALIAS-MFA = userIdentity.sessionContext.attributes.mfaAuthenticated AS mfa_auth
FIELDALIAS-assumed-role-user = responseElements.assumedRoleUser.arn AS assumed_role_user


[aws:cloudwatchlogs:vpcflow]
EVAL-vendor = "Amazon Web Services"
EVAL-vendor_product = "aws.vpcflow"
EVAL-transport = case(protocol_code=="6", "tcp", protocol_code=="17", "udp", protocol_code=="0", "icmp")

FIELDALIAS-action-for-cloud-dm = vpcflow_action AS action


############################
###         GCP          ###
############################

[google:gcp:pubsub:message]

EVAL-vendor = "Google Cloud Platform"
#EVAL-event_name = coalesce('data.protoPayload.response.@type',' data.protoPayload.@type')
EVAL-transport = case('data.jsonPayload.connection.protocol'=="6", "tcp", 'data.jsonPayload.connection.protocol'=="17", "udp", 'data.jsonPayload.connection.protocol'=="0", "icmp")
EVAL-src_user = coalesce('data.protoPayload.authenticationInfo.principalEmail', 'data.jsonPayload.actor.user')
EVAL-action = case('data.protoPayload.response.operationType'=="start", "start", 'data.protoPayload.response.operationType'=="stop", "stop", 'data.protoPayload.response.operationType'=="insert", "run", 'data.protoPayload.methodName'=="storage.buckets.get", "get", 'data.protoPayload.methodName'=="storage.objects.get", "get", 'data.protoPayload.methodName'=="storage.buckets.create", "create", 'data.protoPayload.methodName'=="storage.objects.create", "create", 'data.protoPayload.authorizationInfo{}.granted'=="true", "success", 'data.protoPayload.authorizationInfo.granted'=="false", "failure", 'data.protoPayload.response.operationType'=="*", 'data    .protoPayload.response.operationType' )
EVAL-dest = case('data.resource.type'=="gce_instance", 'data.resource.labels.instance_id', 'data.resource.type'=="gce_subnetwork", 'data.jsonPayload.connection.dest_ip', 1==1, 'data.protoPayload.authorizationInfo{}.resource')


FIELDALIAS-OperationType_event_name = "data.protoPayload.methodName" as event_name


FIELDALIAS-callerSuppliedUserAgent_http_user_agent = "data.protoPayload.requestMetadata.callerSuppliedUserAgent" as http_user_agent
FIELDALIAS-region_zone = "data.resource.labels.location" as region
FIELDALIAS-instance_id_resource_id = "data.resource.labels.instance_id" as resource_id
FIELDALIAS-resource_name = "data.protoPayload.resourceName" as object_path
FIELDALIAS-src_callerip = "data.protoPayload.requestMetadata.callerIp" as src
FIELDALIAS-request.networking_src_network = "data.protoPayload.request.networkinterfaces{}.accessConfigs{}.name" as src_network
FIELDALIAS-project_= "data.resource.labels.project_id" as account
FIELDALIAS-image_id = "data.protoPayload.request.disks{}.initializeParams.sourceImage" as image_id
FIELDALIAS-event_name_event = "data.protoPayload.response.@type" as event_name
#FIELDALIAS-msg_message =  "data.jsonPayload.message" as msg
FIELDALIAS-msg_message = "data.severity" as msg
FIELDALIAS-status_msg = "data.protoPayload.response.status" AS status
FIELDALIAS-vendor_product = "data.protoPayload.serviceName" AS vendor_product
FIELDALIAS-instance_type = "data.protoPayload.request.machineType" AS instance_type


FIELDALIAS-bucket_name = "data.resource.labels.bucket_name" as bucket_name

#TRAFFIC
#FIELDALIAS-dest-zone = "data.jsonPayload.dest_instance.region" as dest_zone
FIELDALIAS-src-port = "data.jsonPayload.connection.src_port" as src_port
FIELDALIAS-src-ip = "data.jsonPayload.connection.src_ip" as src_ip
FIELDALIAS-dest-port= "data.jsonPayload.connection.dest_port" as dest_port
FIELDALIAS-dest-ip = "data.jsonPayload.connection.dest_ip" as dest_ip
FIELDALIAS-vpc = "data.resource.labels.subnetwork_name" as vpc
FIELDALIAS-src-port= "data.jsonPayload.connection.src_port" as src_port
FIELDALIAS-bytes = "data.jsonPayload.bytes_sent" as bytes
FIELDALIAS-packets = "data.jsonPayload.packets_sent" as packets
FIELDALIAS-dvc = "data.jsonPayload.src_instance.vm_name" as dvc



############################
###          MS          ###
############################

[mscs:azure:audit]                                                                                                                                                                                                       

#FIELDALIAS-operationName_act = "action" as action
FIELDALIAS-operationName_act = "operationName.localizedValue" as action
FIELDALIAS-status_stat = "status.value" as status
FIELDALIAS-providerName-resource = "resourceProviderName.value" as resource_name
FIELDALIAS-src-usr-for-dm = "claims.name" as src_user
FIELDALIAS-event_name-for-dm = "eventName.value" as event_name
FIELDALIAS-User-type-caller = "caller" as user_type
FIELDALIAS-src-ipp = "claims.ipaddr" as src
FIELDALIAS-msg-description = "eventName.localizedValue" as msg 
FIELDALIAS-region-location = "properties.resourceLocation" as region
FIELDALIAS-vendor-product-for-dm = "resourceProviderName.localizedValue" as vendor_product
FIELDALIAS-dest-for-dm = "resourceUri" as dest


FIELDALIAS-objectPath-URI = "resourceUri" as object_path

#AUTHENTICATION                                                                                                                                                                                                          
FIELDALIAS-group-name = "resourceGroupName" as _group_name
FIELDALIAS-identity-role = "eventSource.value" as role
FIELDALIAS-assumed-role-user = "claims.http://schemas.microsoft.com/identity/claims/scope" as assumed_role_user


